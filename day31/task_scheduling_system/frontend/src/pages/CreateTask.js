import React, { useState } from "react"; import { useNavigate } from "react-router-dom"; export default function CreateTask() { const navigate = useNavigate(); const [formData, setFormData] = useState({name: "", task_function: "", cron_expression: "*/5 * * * *", priority: 5, max_retries: 3, timeout_seconds: 300}); const handleSubmit = async (e) => { e.preventDefault(); try { const response = await fetch("/api/tasks", {method: "POST", headers: {"Content-Type": "application/json"}, body: JSON.stringify(formData)}); if (response.ok) { navigate("/tasks"); } } catch (error) { console.error("Error creating task:", error); } }; return (<div><h2>Create New Task</h2><form onSubmit={handleSubmit} style={{maxWidth: "500px"}}><div style={{marginBottom: "1rem"}}><label style={{display: "block", marginBottom: "0.5rem"}}>Task Name:</label><input type="text" value={formData.name} onChange={(e) => setFormData({...formData, name: e.target.value})} required style={{width: "100%", padding: "0.5rem", border: "1px solid #ddd", borderRadius: "4px"}} /></div><div style={{marginBottom: "1rem"}}><label style={{display: "block", marginBottom: "0.5rem"}}>Task Function:</label><select value={formData.task_function} onChange={(e) => setFormData({...formData, task_function: e.target.value})} required style={{width: "100%", padding: "0.5rem", border: "1px solid #ddd", borderRadius: "4px"}}><option value="">Select function</option><option value="collect_system_metrics">System Metrics</option><option value="generate_usage_report">Usage Report</option><option value="cleanup_old_logs">Log Cleanup</option><option value="send_notifications">Send Notifications</option><option value="database_backup">Database Backup</option></select></div><div style={{marginBottom: "1rem"}}><label style={{display: "block", marginBottom: "0.5rem"}}>Cron Expression:</label><input type="text" value={formData.cron_expression} onChange={(e) => setFormData({...formData, cron_expression: e.target.value})} required style={{width: "100%", padding: "0.5rem", border: "1px solid #ddd", borderRadius: "4px"}} /></div><div style={{marginBottom: "1rem"}}><label style={{display: "block", marginBottom: "0.5rem"}}>Priority:</label><input type="number" value={formData.priority} onChange={(e) => setFormData({...formData, priority: parseInt(e.target.value)})} min="1" max="20" style={{width: "100%", padding: "0.5rem", border: "1px solid #ddd", borderRadius: "4px"}} /></div><button type="submit" style={{background: "#007cba", color: "white", padding: "0.5rem 1rem", border: "none", borderRadius: "4px", cursor: "pointer"}}>Create Task</button></form></div>); }
