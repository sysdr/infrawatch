version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: metrics_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  backend:
    build:
      context: ../backend
      dockerfile: ../docker/Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/metrics_db
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
    depends_on:
      - postgres
      - redis
    volumes:
      - ../backend:/app

  celery-worker:
    build:
      context: ../backend
      dockerfile: ../docker/Dockerfile.celery
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/metrics_db
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
    depends_on:
      - postgres
      - redis
    volumes:
      - ../backend:/app

  celery-beat:
    build:
      context: ../backend
      dockerfile: ../docker/Dockerfile.celery
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/metrics_db
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
    depends_on:
      - postgres
      - redis
    command: celery -A config.celery_config beat --loglevel=info
    volumes:
      - ../backend:/app

  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/Dockerfile.frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ../frontend:/app
      - /app/node_modules

volumes:
  postgres_data:
  redis_data:
