version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: infrawatch_dev
      POSTGRES_USER: infrawatch
      POSTGRES_PASSWORD: infrawatch123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U infrawatch"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    ports:
      - "5000:5000"
    environment:
      DATABASE_URL: postgresql://infrawatch:infrawatch123@postgres:5432/infrawatch_dev
      TEST_DATABASE_URL: postgresql://infrawatch:infrawatch123@postgres:5432/infrawatch_test
      REDIS_URL: redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
    command: ["sh", "-c", "flask db upgrade && gunicorn --bind 0.0.0.0:5000 --workers 4 --reload 'app:create_app()'"]

volumes:
  postgres_data:
